Инициализация списком имеет дополнительное преимущество, так как запрещает «сужающие» преобразования. 
Это означает, что если вы попытаетесь использовать инициализацию списком для инициализации переменной значением, которое она не может безопасно удерживать, 
компилятор выдаст предупреждение или ошибку.



                   int width{4.5}; // ошибка: не все значения типа double помещаются в int

В приведенном выше фрагменте мы пытаемся присвоить число (4.5), имеющее дробную часть (часть .5), 
целочисленной переменной (которая может содержать только числа без дробных частей). 
При копирующей и прямой инициализациях дробная часть будет отброшена, что приведет к инициализации переменной width значением 4. 
Однако при инициализации списком это приведет к тому, что компилятор выдаст ошибку (что, как правило, хорошо потому, что потеря данных редко бывает желательной). 
Преобразования, которые могут быть выполнены без потенциальной потери данных, в этом случае разрешены.
